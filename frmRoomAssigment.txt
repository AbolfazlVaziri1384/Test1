//******************************
// بالای صفحه 
	//Roles role = new Roles();
//*******************************

//***************
//هنگام لود صفحه
long RoomId;

var Room = db.Rooms.Where(i => i.Id == RoomId).FirstOrDefault();
long? Id =  db.Roles.Where(i => i.BlockId == Room.BlockId).FirstOrDifult().UserId;
var Block = db.Blocks.Where(i => i.Id == Room.BlockId).FirstOrDefault();

if (Id != null)
{
var Owener = db.Users.Where(i => i.Id == Id).Select(d => d.Firstame , d.LastName , d.gender).FirstOrDefault();
string name = ((Owener.gender == 0)? "" : "") + Owener.Firstame + Owener.LastName;
frmBlock.text = string.format("افراد اتاق {0} بلوک {1} با مدیریت {2} " , Room.Number , Block.Name , name);
}
else 
{
frmDormitory.text = string.format("!افراد اتاق {0} بلوک {1} بدون مدیر" ,  Room.Number , Block.Name );
}

//برای شماره یخچال
lblRoomAssets.text =
//*****************


//***************************
// data grid view

Private void RefreshStudentsList(List<Users> Studentslist)
{
    dgvStudents.Rows.Clear();
    List<Users> Lst = new List<Users>();
    foreach (var item in Studentslist)
    {
	var roomassigment = db.RoomAssigments.Where(i => i.StudentId == item.Id).FirstOrDifult();
        if (item.IsDeleted == false)&& (roomassigment != null)
        {
            dgvDormitories.Rows.Add(item.Id.ToString(),
                                   item.FirstName,
                                   item.LastName,
                                   item.Stu_Per_Code.ToString(),
                                   item.NationalCode.ToString(),
								   //***********************
                                   roomassigment.careaton.ToString());
        }

    }
    
    
}

//*******************************

//*******************************
//textsearch

try
{
    RefreshStudentsList((List<Users>)db.Users.Where(i => i.FirstName.contain() == txtSearch.text.Trim() || 
													   i.LastName.contain() == txtSearch.text.Trim() ||
													   i.Stu_Per_Code.contain() == txtSearch.text.Trim() ||
													   i.NationalCode.contain() == txtSearch.text.Trim() ).ToList());
}
catch (Exception ex)
{
    MessageBoxTool.msger(ex.ToString());
}

//*****************************

////no edit !

//************************
//btnDelete

try
{
    if (dgvStudents.Rows.Count  == 0)
    {
        return;
    }
    long id;
    id = long.Parse(dgvStudents.CurrentRow.Cells[0].Value.ToString());
    if (id != 0)
    {
        DialogResult result;
        result = MessageBoxTool.msgq("آیا از حذف مطمئن هستید ؟");
        if (result == DialogResult.Yes)
        {
            RoomAssigments room = db.RoomAssigments.Where(i => i.Id == id).FirstOrDefault();
			room.IsDeleted = true;
			//*************
			room.DeletedBy = true;
			room.DeletedTime = DateTime.now();
            MessageBoxTool.msg();
            RefreshRoomsList(db.RoomAssigments.ToList());
        }
    }

}
catch (Exception ex)
{
    MessageBoxTool.msger(ex.ToString());
}

//********************************************

//*****************************
//btnSetRoomAssigment

try
{
frmSetRoomAssigment frm = new frmSetRoomAssigment();
frm.ShowDialog();
RefreshStudentsList(db.RoomAssigments.ToList());
}
catch (Exception ex)
{
    MessageBoxTool.msger(ex.ToString());
}

//******************
